/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./../../routes/__root";
import { Route as WelcomeImport } from "./../../routes/welcome";
import { Route as authenticationImport } from "./../../routes/__authentication";
import { Route as IndexImport } from "./../../routes/index";
import { Route as authenticationSignupImport } from "./../../routes/__authentication/signup";
import { Route as authenticationResetPasswordImport } from "./../../routes/__authentication/reset-password";
import { Route as authenticationLoginImport } from "./../../routes/__authentication/login";
import { Route as authenticationConfirmEmailImport } from "./../../routes/__authentication/confirm-email";

// Create/Update Routes

const WelcomeRoute = WelcomeImport.update({
  path: "/welcome",
  getParentRoute: () => rootRoute
} as any);

const authenticationRoute = authenticationImport.update({
  id: "/__authentication",
  getParentRoute: () => rootRoute
} as any);

const IndexRoute = IndexImport.update({
  path: "/",
  getParentRoute: () => rootRoute
} as any);

const authenticationSignupRoute = authenticationSignupImport.update({
  path: "/signup",
  getParentRoute: () => authenticationRoute
} as any);

const authenticationResetPasswordRoute =
  authenticationResetPasswordImport.update({
    path: "/reset-password",
    getParentRoute: () => authenticationRoute
  } as any);

const authenticationLoginRoute = authenticationLoginImport.update({
  path: "/login",
  getParentRoute: () => authenticationRoute
} as any);

const authenticationConfirmEmailRoute = authenticationConfirmEmailImport.update(
  {
    path: "/confirm-email",
    getParentRoute: () => authenticationRoute
  } as any
);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/__authentication": {
      id: "/__authentication";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof authenticationImport;
      parentRoute: typeof rootRoute;
    };
    "/welcome": {
      id: "/welcome";
      path: "/welcome";
      fullPath: "/welcome";
      preLoaderRoute: typeof WelcomeImport;
      parentRoute: typeof rootRoute;
    };
    "/__authentication/confirm-email": {
      id: "/__authentication/confirm-email";
      path: "/confirm-email";
      fullPath: "/confirm-email";
      preLoaderRoute: typeof authenticationConfirmEmailImport;
      parentRoute: typeof authenticationImport;
    };
    "/__authentication/login": {
      id: "/__authentication/login";
      path: "/login";
      fullPath: "/login";
      preLoaderRoute: typeof authenticationLoginImport;
      parentRoute: typeof authenticationImport;
    };
    "/__authentication/reset-password": {
      id: "/__authentication/reset-password";
      path: "/reset-password";
      fullPath: "/reset-password";
      preLoaderRoute: typeof authenticationResetPasswordImport;
      parentRoute: typeof authenticationImport;
    };
    "/__authentication/signup": {
      id: "/__authentication/signup";
      path: "/signup";
      fullPath: "/signup";
      preLoaderRoute: typeof authenticationSignupImport;
      parentRoute: typeof authenticationImport;
    };
  }
}

// Create and export the route tree

interface authenticationRouteChildren {
  authenticationConfirmEmailRoute: typeof authenticationConfirmEmailRoute;
  authenticationLoginRoute: typeof authenticationLoginRoute;
  authenticationResetPasswordRoute: typeof authenticationResetPasswordRoute;
  authenticationSignupRoute: typeof authenticationSignupRoute;
}

const authenticationRouteChildren: authenticationRouteChildren = {
  authenticationConfirmEmailRoute: authenticationConfirmEmailRoute,
  authenticationLoginRoute: authenticationLoginRoute,
  authenticationResetPasswordRoute: authenticationResetPasswordRoute,
  authenticationSignupRoute: authenticationSignupRoute
};

const authenticationRouteWithChildren = authenticationRoute._addFileChildren(
  authenticationRouteChildren
);

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "": typeof authenticationRouteWithChildren;
  "/welcome": typeof WelcomeRoute;
  "/confirm-email": typeof authenticationConfirmEmailRoute;
  "/login": typeof authenticationLoginRoute;
  "/reset-password": typeof authenticationResetPasswordRoute;
  "/signup": typeof authenticationSignupRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "": typeof authenticationRouteWithChildren;
  "/welcome": typeof WelcomeRoute;
  "/confirm-email": typeof authenticationConfirmEmailRoute;
  "/login": typeof authenticationLoginRoute;
  "/reset-password": typeof authenticationResetPasswordRoute;
  "/signup": typeof authenticationSignupRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/__authentication": typeof authenticationRouteWithChildren;
  "/welcome": typeof WelcomeRoute;
  "/__authentication/confirm-email": typeof authenticationConfirmEmailRoute;
  "/__authentication/login": typeof authenticationLoginRoute;
  "/__authentication/reset-password": typeof authenticationResetPasswordRoute;
  "/__authentication/signup": typeof authenticationSignupRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | ""
    | "/welcome"
    | "/confirm-email"
    | "/login"
    | "/reset-password"
    | "/signup";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/"
    | ""
    | "/welcome"
    | "/confirm-email"
    | "/login"
    | "/reset-password"
    | "/signup";
  id:
    | "__root__"
    | "/"
    | "/__authentication"
    | "/welcome"
    | "/__authentication/confirm-email"
    | "/__authentication/login"
    | "/__authentication/reset-password"
    | "/__authentication/signup";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  authenticationRoute: typeof authenticationRouteWithChildren;
  WelcomeRoute: typeof WelcomeRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authenticationRoute: authenticationRouteWithChildren,
  WelcomeRoute: WelcomeRoute
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/__authentication",
        "/welcome"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/__authentication": {
      "filePath": "__authentication.tsx",
      "children": [
        "/__authentication/confirm-email",
        "/__authentication/login",
        "/__authentication/reset-password",
        "/__authentication/signup"
      ]
    },
    "/welcome": {
      "filePath": "welcome.tsx"
    },
    "/__authentication/confirm-email": {
      "filePath": "__authentication/confirm-email.tsx",
      "parent": "/__authentication"
    },
    "/__authentication/login": {
      "filePath": "__authentication/login.tsx",
      "parent": "/__authentication"
    },
    "/__authentication/reset-password": {
      "filePath": "__authentication/reset-password.tsx",
      "parent": "/__authentication"
    },
    "/__authentication/signup": {
      "filePath": "__authentication/signup.tsx",
      "parent": "/__authentication"
    }
  }
}
ROUTE_MANIFEST_END */
